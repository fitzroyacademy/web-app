version: 2.1
workflows:
  version: 2
  build:
    jobs:
      - test
      - build:
          context: fitzroy-circleci
          requires:
            - test
          filters:
            branches:
              only:
                - master

      - approve-live-deploy:
          type: approval
          requires:
           - build
          filters:
            tags:
              only:
                - /v[0-9]+\.[0-9]+/
      - deploy-live:
          context: fitzroy-circleci
          requires:
          - approve-live-deploy
          filters:
            tags:
              only:
                - /v[0-9]+\.[0-9]+/

      # - deploy-staging:
      #   context: fitzroy-circleci
      #   requires:
      #     - build
      #   filters:
      #     tags:
      #       only:
      #         - /v[0-9]+\.[0-9]+/



jobs:
  test:
    docker:
      - image: circleci/python:3.7.3
    working_directory: ~/repo
    steps:
      - checkout
      - restore_cache: # Download and cache dependencies
          keys:
            - v1-dependencies-{{ checksum "requirements.txt" }}
            - v1-dependencies- # fallback to using the latest cache if no exact match is found
      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install -r requirements.txt
      - save_cache:
          paths:
            - ./venv
          key: v1-dependencies-{{ checksum "requirements.txt" }}

      - run:
          name: run tests
          command: |
            . venv/bin/activate
            nosetests
          
  build:
    machine:
      image: ubuntu-1604:201903-01
    working_directory: ~/repo
    steps:
      - checkout
      - run: 
          name: Install dependencies
          command: |
            sudo pip install awscli
      - run:
          name: Build and tag Docker containers
          command: |
            source scripts/assume-role.sh
            docker build -t fitzroy-academy/web-app .
            image_id=$(docker images fitzroy-academy/web-app -q)
            docker tag $image_id $SANDBOX_ACCOUNT_ID.dkr.ecr.us-east-2.amazonaws.com/fitzroy-academy/web-app:${CIRCLE_BRANCH}
            $(aws ecr get-login --region us-east-2 --no-include-email)
            docker push $SANDBOX_ACCOUNT_ID.dkr.ecr.us-east-2.amazonaws.com/fitzroy-academy/web-app:${CIRCLE_BRANCH}
      - persist_to_workspace:
          root: ~/repo/
          paths:
            - scripts

  deploy-live:
    machine:
      image: ubuntu-1604:201903-01
    working_directory: ~/repo
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - run:
          name: Build task definition and deploy
          command: |
            set -o pipefail
            source /tmp/workspace/scripts/assume-role.sh
            sudo apt-get install -y jq
            export DOCKER_IMAGE_URL=$SANDBOX_ACCOUNT_ID.dkr.ecr.us-east-2.amazonaws.com/fitzroy-academy/web-app:${CIRCLE_BRANCH}
            TASK_DEFINITION_ARN=$(aws ecs list-task-definitions --family web-app-live --output text --region us-east-2 | sort -r | awk '{print $2}' | head -n 1)
            NEXT_REVISION=$(echo $TASK_DEFINITION_ARN | awk 'BEGIN { FS = ":" } ; { print $NF+1 }')
            NEXT_TASK_DEFINITION_BODY=$(aws ecs describe-task-definition --region us-east-2 --task-definition $TASK_DEFINITION_ARN | jq '.taskDefinition | del (.taskDefinitionArn,.revision,.status,.requiresAttributes,.compatibilities)' | sed "s@\"image\".*@\"image\": \"$DOCKER_IMAGE_URL\",@")
            aws ecs register-task-definition --cli-input-json $NEXT_TASK_DEFINITION_BODY --region us-east-2
            aws ecs update-service --cluster web-app --service web-app-live --task-definition web-app-live:$NEXT_REVISION --region us-east-2 --force-new-deployment
